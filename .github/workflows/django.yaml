name: Django CI

on:
  push:
    branches: [ "main", "desenvolvimento" ]
  pull_request:
    branches: [ "main", "desenvolvimento" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10"]

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: unbook
          POSTGRES_DB: participemais
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      POSTGRES_DB: participemais
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: unbook
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      DJANGO_SETTINGS_MODULE: backend.project.settings # Ajuste se seu settings.py estiver em outro lugar

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}


    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install PostgreSQL client
      run: sudo apt-get update && sudo apt-get install -y postgresql-client

    - name: Test TCP connectivity to Postgres
      run: nc -zv $POSTGRES_HOST $POSTGRES_PORT



    - name: Wait for PostgreSQL
      run: |
        timeout=60
        until pg_isready -h $POSTGRES_HOST -p $POSTGRES_PORT; do
          echo "Aguardando banco de dados..."
          sleep 1
          timeout=$((timeout - 1))
          if [ $timeout -le 0 ]; then
            echo "Timeout esperando PostgreSQL"
            exit 1
          fi
        done

    - name: Test PostgreSQL connection with psql
      env:
        PGPASSWORD: ${{ env.POSTGRES_PASSWORD }}
      run: |
        psql -h $POSTGRES_HOST -U $POSTGRES_USER -d $POSTGRES_DB -p $POSTGRES_PORT -c '\l'

    - name: Run migrations
      working-directory: ./backend
      run: |
        python3 manage.py migrate

    - name: Run tests
      working-directory: ./backend
      run: |
        python3 manage.py test
